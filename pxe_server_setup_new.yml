---
- hosts: localhost
  become: yes
  tasks:
    - name: Install required packages
      apt:
        name:
          - tftpd-hpa
          - apache2
          - ipxe
        state: present

    - name: Ensure syslinux is installed
      apt:
        name: syslinux
        state: present

    - name: Create TFTP and HTTP boot directories
      file:
        path: /var/www/html/{{ item }}
        state: directory
        owner: www-data
        group: www-data
        mode: '0755'

    - name: Copy iPXE boot files for both BIOS and UEFI
      copy:
        src: "/usr/lib/ipxe/{{ item }}"
        dest: "/var/lib/tftpboot/{{ item }}"
        owner: tftp
        group: tftp
        mode: '0644'
      with_items:
        - undionly.kpxe  # For BIOS

 name: Create iPXE boot menu script
      copy:
        dest: /var/www/html/boot/menu.ipxe
        content: |
          #!ipxe
          isset ${server-ip} || set server-ip 192.168.30.13

          :start
          menu iPXE boot menu
          item --gap --             ------------------------- Operating systems ------------------------------
          item --key l linux  Choose a (L)inux Distrobution
          item --key w winpe  Boot to (W)indows PE
          item --gap --             ----------------------------- Utilities ----------------------------------
          item --key e ext  (E)xit
          item --key i san  (i)SCI/Sanboot
          item --key s shell  EFI (S)hell
          choose version && goto ${version} || goto start

          :linux
          chain http://${server-ip}/boot/linux.ipxe

          :winpe
          chain http://${server-ip}/winpe/boot.ipxe

          :shell
          chain http://${server-ip}/boot/efi_shell.ipxe

          :ext
          exit

          :san
          echo -n root-path: && read netX/root-path
          sanhook --drive 0x80 ${netX/root-path}
          sanboot ${netX/root-path} || clear netX/root-path
          goto start
          
        owner: www-data
        group: www-data
        mode: '0644'

    - name: Configure TFTP server with verbose logging
      lineinfile:
        path: /etc/default/tftpd-hpa
        regexp: '^TFTP_OPTIONS='
        line: 'TFTP_OPTIONS="--secure --verbose"'
      notify: restart tftpd

    - name: Enable and restart TFTP server
      service:
        name: tftpd-hpa
        state: restarted
        enabled: yes

    - name: Enable and restart Apache2 HTTP server
      service:
        name: apache2
        state: restarted
        enabled: yes

  handlers:
    - name: restart tftpd
      service:
        name: tftpd-hpa
        state: restarted
